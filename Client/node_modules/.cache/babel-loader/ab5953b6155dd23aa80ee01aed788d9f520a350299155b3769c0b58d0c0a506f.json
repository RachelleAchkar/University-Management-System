{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\UniversityManagementSystem\\\\university-management-system\\\\src\\\\components\\\\AllDepartments.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport './AllFaculties.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllDepartments = () => {\n  _s();\n  var _location$state;\n  const [departments, setDepartments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [sortOrder, setSortOrder] = useState('A-Z'); // Default sort order\n  const location = useLocation();\n  const navigate = useNavigate();\n  const facultyId = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.facultyId;\n  useEffect(() => {\n    const fetchDepartments = async () => {\n      if (!facultyId) {\n        console.error('Faculty ID is missing!');\n        setLoading(false);\n        return;\n      }\n      const orderByColumn = 'departmentName';\n      const orderByDirection = sortOrder === \"A-Z\" ? \"ASC\" : \"DESC\";\n      const apiUrl = `http://localhost:8080/departments/faculty/${facultyId}?search=${searchQuery}&orderByDirection=${orderByDirection}&orderByColumn=${orderByColumn}`;\n      console.log(\"Fetching from API:\", apiUrl);\n      try {\n        const response = await fetch(apiUrl);\n        const data = await response.json();\n        console.log(\"API Response:\", data);\n        if (response.ok) {\n          setDepartments(data);\n        } else {\n          setDepartments([]); // Handle empty or error response\n        }\n      } catch (error) {\n        console.error('Error fetching departments:', error);\n        setDepartments([]);\n      } finally {\n        setLoading(false); // Remove loading state after the API call\n      }\n    };\n    fetchDepartments();\n  }, [facultyId, searchQuery, sortOrder]); // Trigger fetch when facultyId, searchQuery, or sortOrder changes\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this);\n  }\n  if (!facultyId) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Faculty not found. Please go back and select a faculty.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this);\n  }\n  const handleDepartmentClick = departmentId => {\n    navigate('/majors', {\n      state: {\n        departmentId\n      }\n    });\n  };\n  const handleAddDepartment = () => {\n    navigate(`/addDepartment`, {\n      state: {\n        facultyId\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"faculties-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Departments in Faculty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by name\",\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value),\n        className: \"search-bar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: sortOrder,\n        onChange: e => setSortOrder(e.target.value),\n        className: \"sort-dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"A-Z\",\n          children: \"Sort by Name (A-Z)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Z-A\",\n          children: \"Sort by Name (Z-A)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), departments.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No departments found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"faculties-list\",\n      children: departments.map(department => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"faculty-box\",\n        onClick: () => handleDepartmentClick(department.departmentID),\n        children: department.departmentName\n      }, department.departmentID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-faculty-button\",\n      onClick: handleAddDepartment,\n      children: \"Add Department\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(AllDepartments, \"8eKZjvTzp1ZpTnPMyCpK2+EcIyY=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = AllDepartments;\nexport default AllDepartments;\nvar _c;\n$RefreshReg$(_c, \"AllDepartments\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","jsxDEV","_jsxDEV","AllDepartments","_s","_location$state","departments","setDepartments","loading","setLoading","searchQuery","setSearchQuery","sortOrder","setSortOrder","location","navigate","facultyId","state","fetchDepartments","console","error","orderByColumn","orderByDirection","apiUrl","log","response","fetch","data","json","ok","children","fileName","_jsxFileName","lineNumber","columnNumber","handleDepartmentClick","departmentId","handleAddDepartment","className","type","placeholder","value","onChange","e","target","length","map","department","onClick","departmentID","departmentName","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/UniversityManagementSystem/university-management-system/src/components/AllDepartments.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport './AllFaculties.css';\r\n\r\nconst AllDepartments = () => {\r\n  const [departments, setDepartments] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [sortOrder, setSortOrder] = useState('A-Z'); // Default sort order\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const facultyId = location.state?.facultyId;\r\n\r\n  useEffect(() => {\r\n    const fetchDepartments = async () => {\r\n      if (!facultyId) {\r\n        console.error('Faculty ID is missing!');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const orderByColumn = 'departmentName';\r\n      const orderByDirection = sortOrder === \"A-Z\" ? \"ASC\" : \"DESC\"; \r\n\r\n      const apiUrl = `http://localhost:8080/departments/faculty/${facultyId}?search=${searchQuery}&orderByDirection=${orderByDirection}&orderByColumn=${orderByColumn}`;\r\n      \r\n      console.log(\"Fetching from API:\", apiUrl);\r\n\r\n      try {\r\n        const response = await fetch(apiUrl);\r\n        const data = await response.json();\r\n\r\n        console.log(\"API Response:\", data); \r\n        if (response.ok) {\r\n          setDepartments(data);\r\n        } else {\r\n          setDepartments([]); // Handle empty or error response\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching departments:', error);\r\n        setDepartments([]);\r\n      } finally {\r\n        setLoading(false); // Remove loading state after the API call\r\n      }\r\n    };\r\n\r\n    fetchDepartments();\r\n  }, [facultyId, searchQuery, sortOrder]); // Trigger fetch when facultyId, searchQuery, or sortOrder changes\r\n\r\n  if (loading) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  if (!facultyId) {\r\n    return <p>Faculty not found. Please go back and select a faculty.</p>;\r\n  }\r\n\r\n  const handleDepartmentClick = (departmentId) => {\r\n    navigate('/majors', { state: { departmentId } });\r\n  };\r\n\r\n  const handleAddDepartment = () => {\r\n    navigate(`/addDepartment`, { state: { facultyId } });\r\n  };\r\n\r\n  return (\r\n    <div className=\"faculties-container\">\r\n      <h1>Departments in Faculty</h1>\r\n      <div className=\"controls\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search by name\"\r\n          value={searchQuery}\r\n          onChange={(e) => setSearchQuery(e.target.value)} className=\"search-bar\"\r\n        />\r\n        <select\r\n          value={sortOrder}\r\n          onChange={(e) => setSortOrder(e.target.value)}\r\n          className=\"sort-dropdown\"\r\n        >\r\n          <option value=\"A-Z\">Sort by Name (A-Z)</option>\r\n          <option value=\"Z-A\">Sort by Name (Z-A)</option>\r\n        </select>\r\n      </div>\r\n      {departments.length === 0 ? (\r\n        <p>No departments found.</p>\r\n      ) : (\r\n        <div className=\"faculties-list\">\r\n          {departments.map((department) => (\r\n            <div\r\n              key={department.departmentID}\r\n              className=\"faculty-box\"\r\n              onClick={() => handleDepartmentClick(department.departmentID)}\r\n            >\r\n              {department.departmentName}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n      <button className=\"add-faculty-button\" onClick={handleAddDepartment}>\r\n        Add Department\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllDepartments;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}